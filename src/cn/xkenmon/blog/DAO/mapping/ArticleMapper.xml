<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ArticleDAO">

    <resultMap id="ArticleMap" type="cn.xkenmon.blog.vo.Article">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="type" jdbcType="CHAR" property="type"/>
        <result column="title" jdbcType="CHAR" property="title"/>
        <result column="date" jdbcType="TIMESTAMP" property="date"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="summary" jdbcType="VARCHAR" property="summary"/>
        <result column="content" jdbcType="CLOB" property="content"/>
        <result column="read_count" jdbcType="INTEGER" property="readCount"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
    </resultMap>


    <insert id="createArticle" parameterType="cn.xkenmon.blog.vo.Article">
        INSERT INTO articles (type,title,date,summary,content,read_count,author,cover) VALUES (#{type},#{title},#{date},#{summary},#{content},#{readCount},#{author}, #{cover})
    </insert>

    <select id="findSimpleByOrderBy" resultMap="ArticleMap" resultType="cn.xkenmon.blog.vo.Article">
        SELECT id,title,author,date,summary,cover FROM blog.articles WHERE ${array[0]} = #{array[1]} ORDER BY ${array[2]} DESC
    </select>

    <select id="findById" resultType="cn.xkenmon.blog.vo.Article" parameterType="int" resultMap="ArticleMap">
        SELECT *
        FROM Articles
        WHERE id = #{_parameter}
    </select>
    <select id="findByTitle" resultType="cn.xkenmon.blog.vo.Article" resultMap="ArticleMap">
        SELECT * FROM articles WHERE title = #{_parameter}
    </select>
    <select id="findByType" resultType="cn.xkenmon.blog.vo.Article" resultMap="ArticleMap">
        SELECT * FROM articles WHERE type = #{_parameter}
    </select>

    <select id="findByTypeOrderBy" resultType="cn.xkenmon.blog.vo.Article" resultMap="ArticleMap">
        SELECT * FROM articles WHERE type = #{array[0]} ORDER BY ${array[1]} DESC
    </select>

    <select id="findByAuthorOrderBy" resultType="cn.xkenmon.blog.vo.Article" resultMap="ArticleMap">
        SELECT * FROM articles WHERE author = #{array[0]} ORDER BY ${array[1]} DESC
    </select>

    <select id="findByAuthor" resultType="cn.xkenmon.blog.vo.Article" resultMap="ArticleMap">
        SELECT * FROM articles WHERE author = #{_parameter}
    </select>

    <delete id="deleteById">
        DELETE FROM articles WHERE id = #{_parameter}
    </delete>

    <update id="updateById" parameterType="cn.xkenmon.blog.vo.Article" >
        UPDATE articles
        <set>
            <if test="type != null and !&quot;&quot;.equals(type.trim())">type = #{type},</if>
            <if test="title != null">title = #{title},</if>
            <if test="date != null">date = #{date},</if>
            <if test="updateTime != null">update_time = #{updateTime},
            </if>
            <if test="summary != null">summary = #{summary},</if>
            <if test="content != null">content = #{content},</if>
            <if test="readCount != -1">read_count = #{readCount},</if>
            <if test="cover != null">cover = #{cover},</if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="orderBy" resultType="cn.xkenmon.blog.vo.Article" resultMap="ArticleMap">
        SELECT * from articles ORDER BY ${_parameter} DESC
    </select>

    <select id="findSimpleOrderBy" resultType="cn.xkenmon.blog.vo.Article" resultMap="ArticleMap">
        SELECT id,title,author,date,summary,cover FROM blog.articles ORDER BY ${_parameter} DESC
    </select>

    <select id="queryCount" resultType="int" >
        SELECT COUNT(*) FROM articles
    </select>

    <select id="queryCountByColumn" resultType="int" >
        SELECT COUNT(*) FROM articles WHERE ${array[0]} = #{array[1]}
    </select>

    <select id="getTypeList" resultType="String">
        SELECT type FROM type
    </select>
</mapper>